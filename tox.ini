[tox]
skipsdist = true
envlist = pytest-coq{84,85,86,87,88,89,810}-py{27,36}, vim

[testenv]
whitelist_externals =
    pytest: nix-build
    pytest,vim: sh
    vim: git
    vim: vim
passenv =
    pytest: NIX_PATH
    pytest: HOME
setenv =
    pytest: PATH = {envtmpdir}/coq/bin{:}{env:PATH}
    pytest: PYTHONPATH = python
deps = pytest

commands_pre =
; coq_8_4 is no longer in the default nixpkgs so have to use an archived version
    coq84: nix-build -j20 'https://github.com/NixOS/nixpkgs/archive/18.03.tar.gz' -A coq_8_4 -o {envtmpdir}/coq
    coq85: nix-build -j20 '<nixpkgs>' -A coq_8_5 -o {envtmpdir}/coq
    coq86: nix-build -j20 '<nixpkgs>' -A coq_8_6 -o {envtmpdir}/coq
    coq87: nix-build -j20 '<nixpkgs>' -A coq_8_7 -o {envtmpdir}/coq
    coq88: nix-build -j20 '<nixpkgs>' -A coq_8_8 -o {envtmpdir}/coq
    coq89: nix-build -j20 '<nixpkgs>' -A coq_8_9 -o {envtmpdir}/coq
    coq810: nix-build -j20 '<nixpkgs>' -A coq_8_10 -o {envtmpdir}/coq

    vim: git clone https://github.com/junegunn/vader.vim {envtmpdir}/vader.vim
    vim: git clone https://github.com/let-def/vimbufsync {envtmpdir}/vimbufsync

commands =
; setenv doesn't seem to be enough to pick up the right Coq version
    pytest: sh -c 'PATH={env:PATH} python -m pytest -q {posargs}'

    vim: sh -c 'echo "filetype off | set rtp+={envtmpdir}/vader.vim | set rtp+={envtmpdir}/vimbufsync | set rtp+=. | filetype plugin indent on | syntax enable" > {envtmpdir}/vimrc'
    vim: vim -Nu {envtmpdir}/vimrc -c 'Vader! tests/*.vader'

[testenv:devbase]
description = Common dev dependencies
deps =
    flake8
    flake8-import-order
    pylint

[testenv:devbase-3]
description = Extra dev dependencies for py3
deps =
    {[testenv:devbase]deps}
    flake8-bugbear
    black
    mypy

[testenv:lint]
description = Lint code
whitelist_externals = sh
commands =
    - python -m flake8 python/
    - sh -c 'python -m pylint python/*.py'

[testenv:lint-2]
description = Lint code with py2
whitelist_externals = {[testenv:lint]whitelist_externals}
basepython = python2
envdir = {toxworkdir}/2
deps = {[testenv:devbase]deps}
commands = {[testenv:lint]commands}

[testenv:lint-3]
description = Lint code with py3
whitelist_externals = {[testenv:lint]whitelist_externals}
basepython = python3
envdir = {toxworkdir}/3
deps = {[testenv:devbase-3]deps}
commands = {[testenv:lint]commands}

[testenv:black]
description = Format code
basepython = python3
envdir = {toxworkdir}/3
deps = {[testenv:devbase-3]deps}
commands = python -m black --exclude six.py python/ tests/

[testenv:mypy]
description = Typecheck code
basepython = python3
envdir = {toxworkdir}/3
deps = {[testenv:devbase-3]deps}
commands =
    - python -m mypy -2 python/
    - python -m mypy python/
